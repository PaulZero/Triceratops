@using Triceratops.Libraries.Helpers;
@model ServerViewModel

@{
    ViewData["Title"] = "ServerDetails";
}

<h1>@Model.Name (@Model.ServerType)</h1>

<h2>Status</h2>

@{await Html.RenderPartialAsync("_ServerStatus", Model);}

@if (Model.Volumes.Any())
{
    <h2>Storage</h2>

    <ul>
        @foreach (var directory in Model.Volumes)
        {
            <li>
                @directory.Name

                @if (directory.Files.Any())
                {
                <ul>
                    @foreach (var file in directory.Files)
                    {
                        var routeParams = new Dictionary<string, string>
                        {
                            ["slug"] = Model.Slug,
                            ["fileHash"] = HashHelper.CreateHash(file.RelativePath)
                        };

                        <li data-toggle="tooltip" data-placement="left" title="Created: @file.Created | Modified: @file.LastUpdated">
                            @if (FileHelper.CanEdit(file.Name))
                            {
                                <a asp-route="EditServerFile" asp-all-route-data="routeParams">@file.Name</a>
                            }
                            else
                            {
                                @file.Name
                            }
                        </li>
                    }
                    </ul>
                }
            </li>
        }
    </ul>
}

<div>
    <a asp-route="ListServers">Back to Servers</a>
</div>
